==================
Closure type
==================

fun f1(arg fun {}.(a i32) bool | u32) {

}

fun f2(arg fun &{}.(a i32) bool | u32) {

}

fun f2<T>(arg fun &MyType<T>.(a i32) bool | u32) {

}

---

(source_file
    (function_definition
    (identifier)
    (parameter_list
        (parameter
        (identifier)
        (closure_type
            (parameter_list
            (parameter
                (identifier)
                (primitive_type)))
            (sum_type
            (primitive_type)
            (primitive_type)))))
    (block))
    (function_definition
        (identifier)
        (parameter_list
            (parameter
            (identifier)
            (closure_type
                (parameter_list
                (parameter
                    (identifier)
                    (primitive_type)))
                (sum_type
                (primitive_type)
                (primitive_type)))))
        (block)
    )
    (function_definition
        (identifier)
        (type_params
          (identifier))
        (parameter_list
          (parameter
            (identifier)
            (closure_type
              (generic_type
                (identifier)
                (type_arguments
                  (identifier)))
              (parameter_list
                (parameter
                  (identifier)
                  (primitive_type)))
              (sum_type
                (primitive_type)
                (primitive_type)
              )
            )
          )
        )
        (block)
    )
)

==================
Closure call
==================

fun f1(arg fun &mut{}.(a i32) bool | u32) {

}

fun main() {
    f1(fun (a) { a + 2})
    f1(fun {}(a) { a + 2})
}

---

(source_file
    (function_definition
    (identifier)
    (parameter_list
        (parameter
        (identifier)
        (closure_type
            (parameter_list
            (parameter
                (identifier)
                (primitive_type)))
            (sum_type
            (primitive_type)
            (primitive_type)))))
    (block))
    (function_definition
    (identifier)
    (parameter_list)
    (block
        (expression_statement
        (function_call
            (identifier)
            (argument_list
            (closure_expression
                (argument_list
                (identifier))
                (block
                (expression_statement
                    (binary_expression
                    (identifier)
                    (int_literal))))))))
        (expression_statement
        (function_call
            (identifier)
            (argument_list
            (closure_expression
                (argument_list
                (identifier))
                (block
                (expression_statement
                    (binary_expression
                    (identifier)
                    (int_literal)
                    )
                )
              )
            )
          )
        )
      )
    )
  )
)